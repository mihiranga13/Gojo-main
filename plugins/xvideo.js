const { fetchJson } = require("../lib/functions");
const { cmd } = require("../lib/command");
const axios = require("axios");

const apilink = 'https://www.dark-yasiya-api.site';

cmd({
    pattern: "xvdl",
    alias: ["xvdl", "xvdown"],
    react: "üîû",
    desc: "Download xvideo.com porn video",
    category: "download",
    use: '.xvdl <query>',
    filename: __filename
}, async (conn, m, mek, { from, q, reply }) => {
    try {
        if (!q) return await reply("‚ùå Please provide a search query!");

        const xvList = await fetchJson(`${apilink}/search/xvideo?q=${q}`);
        if (!xvList?.result?.length) return await reply("‚ùå No results found!");

        const xvData = await fetchJson(`${apilink}/download/xvideo?url=${xvList.result[0].url}`);
        const res = xvData.result;

        let info = `üîû *ùôìùôëùôûùôôùôöùô§ ùôéùôöùô≠ ùòøùô§ùô¨ùô£ùô°ùô§ùôñùôôùôöùôß* üîû\n\n` +
            `üìå *Title:* ${res.title || "Unknown"}\n` +
            `üëÅ *Views:* ${res.views || "Unknown"}\n` +
            `üëç *Likes:* ${res.like || "Unknown"}\n` +
            `üëé *Dislikes:* ${res.deslike || "Unknown"}\n` +
            `üì¶ *Size:* ${res.size || "Unknown"}\n\n` +
            `üîΩ *Reply with your choice:*\n` +
            `1Ô∏è‚É£ *Video File* üìπ\n` +
            `2Ô∏è‚É£ *Document File* üìÅ\n\n` +
            `üîê *Powered by gojo md*`;

        const sentMsg = await conn.sendMessage(from, { image: { url: res.image }, caption: info }, { quoted: mek });
        const messageID = sentMsg.key.id;
        await conn.sendMessage(from, { react: { text: 'üì•', key: sentMsg.key } });

        conn.ev.on('messages.upsert', async (msgUp) => {
            try {
                const msgInfo = msgUp?.messages?.[0];
                if (!msgInfo?.message) return;

                const userText = msgInfo.message?.conversation || msgInfo.message?.extendedTextMessage?.text;
                const isReplyToOurMsg = msgInfo.message?.extendedTextMessage?.contextInfo?.stanzaId === messageID;

                if (!isReplyToOurMsg) return;

                let userReply = userText.trim();

                if (userReply === "1") {
                    const sent = await conn.sendMessage(from, { text: "‚è≥ Downloading video..." }, { quoted: mek });
                    await conn.sendMessage(from, { video: { url: res.dl_link }, mimetype: "video/mp4", caption: res.title }, { quoted: mek });
                    await conn.sendMessage(from, { text: "‚úÖ Video sent!\nPowered by gojo md", edit: sent.key });
                } else if (userReply === "2") {
                    const sent = await conn.sendMessage(from, { text: "‚è≥ Uploading document..." }, { quoted: mek });
                    await conn.sendMessage(from, { document: { url: res.dl_link }, fileName: `${res.title}.mp4`, mimetype: "video/mp4", caption: res.title }, { quoted: mek });
                    await conn.sendMessage(from, { text: "‚úÖ Document sent!\nPowered by gojo md", edit: sent.key });
                } else {
                    await conn.sendMessage(from, { text: "‚ùå Invalid choice! Reply with 1 or 2", quoted: msgInfo });
                }

            } catch (err) {
                console.error(err);
                await reply(`‚ùå Error while handling reply: ${err.message}`);
            }
        });

    } catch (err) {
        console.error(err);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } });
        await reply(`‚ùå *An error occurred:* ${err.message}`);
    }
});
